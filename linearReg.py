# -*- coding: utf-8 -*-
"""LinearReg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yL8V11AYDYF-YCVGSptsib3f3bkrBCXW
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset = pd.read_csv('house_data.csv')

dataset.insert(5,"x0",1)
print (dataset.head())

x_data = dataset.iloc[:,[5,6]]
y_data = dataset['price']
plt.plot(x_data.iloc[:,1], y_data, 'ro', label='Original data') 
plt.xlabel("sqft")
plt.ylabel("price")
plt.legend()
plt.show()

#scaling
x_max=x_data.iloc[:,1].max()
x_min=x_data.iloc[:,1].min()
x_data.iloc[:,1]=(x_data.iloc[:,1])/(x_max)
print(x_max)
print(x_data)

#convert to matrix
x_data=np.array(x_data)
y_data=np.array(y_data).flatten()
print(x_data.shape)
print(y_data.shape)

#split data train & test 80/20
trainSize=int(y_data.size*.8)
print(trainSize,testSize)
xTrain=x_data[:trainSize]
xTest=x_data[trainSize:]

yTrain=y_data[:trainSize]
yTest=y_data[trainSize:]

print(xTrain,xTest)
print(len(yTrain),len(yTest))

alpha=.1 
ceta=np.array([0,0])
def gradientDescentOneVar():
    global ceta
    for i in range(100000):
        y_pred = xTrain.dot(ceta) 
        ceta = ceta - ((xTrain.T.dot(y_pred - yTrain)) * alpha * (1 / trainSize))
        ceta0,ceta1=ceta
    print("MSE = ",MSE(ceta0,ceta1))
    print("Theta: ",ceta)

def MSE(ceta0,ceta1):
    Esum=0
    xTrain1=xTrain[:,1]
    for i in range(trainSize):
        Esum+=pow( yTrain[i] - (ceta0+ceta1*xTrain1[i]) , 2)
    Esum=Esum*(1/(2 * trainSize))
    return Esum

gradientDescentOneVar()

plt.scatter(x_data[:,1], y_data,)
xPoints = np.linspace(0,0.8,5)
yPoints = [ceta[0] + ceta[1]* x for x in xPoints]
plt.plot(fitX, fitY,color='red') 
plt.xlabel("sqft")
plt.ylabel("price")
plt.legend()
plt.show()

def predTest():
    ytestpred = xTest.dot(ceta)
    print(ytestpred,yTest)

predTest()

#Trying different alphas
#alpha = .1       iteration = 100000      MSE =  34012848737.616528
#alpha = .4       iteration = 10000       MSE =  34012848737.616543
#alpha = .01      iteration = 10000       MSE =  47225349578.991615
#alpha = .001     iteration = 50000       MSE =  54442254613.358246
#alpha = .0001    iteration = 100000      MSE =  62964040240.09301